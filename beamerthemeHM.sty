\ProvidesPackage{beamerthemeHM}[2025/10/12 HM Beamer Theme]

% Colors
\RequirePackage{xcolor}
\definecolor{HMRed}{HTML}{FB5454}
\definecolor{HMGray}{HTML}{E6E6E6}

% -- Color setters / overrides -------------------------------------------------
% Users can call the following commands in their document (after \usetheme{HM})
% to override the theme colours.
% \sethmprimarycolor[<model>]{<spec>}  e.g. \sethmprimarycolor[HTML]{FF0000}
% \sethmexampleblockcolors[<model>]{<title>}{<body>}
% \sethmalertblockcolors[<model>]{<title>}{<body>}
% The optional <model> defaults to HTML. Supported models depend on xcolor.

% Primary (HM) colour: redefine the named colour HMRed and update elements that
% reference it (like list bullets). Optional model argument (default HTML).
\newcommand{\sethmprimarycolor}[2][HTML]{%
  \definecolor{HMRed}{#1}{#2}%
  % update beamer elements that use HMRed
  \setbeamercolor{item}{fg=HMRed}%
}

% Example block colours: separate title BG/FG and body BG/FG so defaults can be
% transparent/white for backgrounds while title text is green by default.
\definecolor{hmExampleTitleBgColor}{HTML}{FFFFFF} % default: white (transparent-like)
\definecolor{hmExampleTitleFgColor}{HTML}{2E8B57} % default: green (SeaGreen)
\definecolor{hmExampleBodyBgColor}{HTML}{FFFFFF}  % default: white
\definecolor{hmExampleBodyFgColor}{HTML}{000000}  % default: black
\newcommand{\sethmexampleblockcolors}[3][HTML]{%
  % API: \sethmexampleblockcolors[<model>]{<title-fg>}{<body-bg>}
  % This keeps your existing two-arg usage working (e.g. both 000000).
  \definecolor{hmExampleTitleFgColor}{#1}{#2}%
  \definecolor{hmExampleBodyBgColor}{#1}{#3}%
  % Apply to primary and alternate beamercolor keys
  \setbeamercolor{exampleblock title}{bg=hmExampleTitleBgColor,fg=hmExampleTitleFgColor}%
  \setbeamercolor{exampleblock body}{bg=hmExampleBodyBgColor,fg=hmExampleBodyFgColor}%
  \setbeamercolor{block title example}{bg=hmExampleTitleBgColor,fg=hmExampleTitleFgColor}%
  \setbeamercolor{block body example}{bg=hmExampleBodyBgColor,fg=hmExampleBodyFgColor}%
  \setbeamercolor{example text}{fg=hmExampleTitleFgColor}
}

% Alert block colours: separate title BG/FG and body BG/FG. Default: white
% backgrounds and bright red title text (HMRed).
\definecolor{hmAlertTitleBgColor}{HTML}{FFFFFF} % default: white
\definecolor{hmAlertTitleFgColor}{HTML}{FB5454} % default: HMRed (bright red)
\definecolor{hmAlertBodyBgColor}{HTML}{FFFFFF}  % default: white
\definecolor{hmAlertBodyFgColor}{HTML}{000000}  % default: black
\newcommand{\sethmalertblockcolors}[3][HTML]{%
  % API: \sethmalertblockcolors[<model>]{<title-fg>}{<body-bg>}
  \definecolor{hmAlertTitleFgColor}{#1}{#2}%
  \definecolor{hmAlertBodyBgColor}{#1}{#3}%
  % Apply to primary and alternate beamercolor keys
  \setbeamercolor{alertblock title}{bg=hmAlertTitleBgColor,fg=hmAlertTitleFgColor}%
  \setbeamercolor{alertblock body}{bg=hmAlertBodyBgColor,fg=hmAlertBodyFgColor}%
  \setbeamercolor{block title alerted}{bg=hmAlertTitleBgColor,fg=hmAlertTitleFgColor}%
  \setbeamercolor{block body alerted}{bg=hmAlertBodyBgColor,fg=hmAlertBodyFgColor}%
  \setbeamercolor{alerted text}{fg=hmAlertTitleFgColor}
}

% Apply defaults to beamer templates (so theme looks the same unless users
% override with the setter macros above)
\setbeamercolor{exampleblock title}{bg=hmExampleTitleBgColor,fg=hmExampleTitleFgColor}
\setbeamercolor{exampleblock body}{bg=hmExampleBodyBgColor,fg=hmExampleBodyFgColor}
\setbeamercolor{block title example}{bg=hmExampleTitleBgColor,fg=hmExampleTitleFgColor}
\setbeamercolor{block body example}{bg=hmExampleBodyBgColor,fg=hmExampleBodyFgColor}
\setbeamercolor{example text}{fg=hmExampleTitleFgColor}
\setbeamercolor{alertblock title}{bg=hmAlertTitleBgColor,fg=hmAlertTitleFgColor}
\setbeamercolor{alertblock body}{bg=hmAlertBodyBgColor,fg=hmAlertBodyFgColor}
\setbeamercolor{block title alerted}{bg=hmAlertTitleBgColor,fg=hmAlertTitleFgColor}
\setbeamercolor{block body alerted}{bg=hmAlertBodyBgColor,fg=hmAlertBodyFgColor}
\setbeamercolor{alerted text}{fg=hmAlertTitleFgColor}

% (frametitle spacing is defined later after footer padding)


% Basic beamer settings
\mode<presentation>
\setbeamercolor{structure}{fg=black}
\setbeamercolor{normal text}{fg=black,bg=white}
\setbeamercolor{title}{fg=black,bg=white}
\setbeamercolor{frametitle}{fg=black,bg=white}
\setbeamercolor{block title}{bg=HMGray,fg=black}
\setbeamercolor{block body}{bg=HMGray!60,fg=black}

\setbeamertemplate{navigation symbols}{}

% Fonts: Helvetica as default sans
\RequirePackage[T1]{fontenc}
\RequirePackage[scaled]{helvet}
\renewcommand{\familydefault}{\sfdefault}

% Custom commands for footer text
\newcommand{\hmfootertext}{}
\newcommand{\sethmfooter}[1]{\renewcommand{\hmfootertext}{#1}}

% Logo handling (user provides hm_logo.png or pdf in project root)
\newcommand{\hmlogopath}{hm_logo.png}
\newcommand{\sethmlogo}[1]{\renewcommand{\hmlogopath}{#1}}
% Separate footer logo (optional, defaults to main logo if not set)
% Usage: Uncomment the next line and replace the file name to override the footer logo
% \newcommand{\hmfooterlogopath}{hm_footer_logo.png}
% Hidden flag: if true, footer logo is not rendered (and gap is removed)
\newif\ifhmfooterlogohidden
\hmfooterlogohiddenfalse
% Setter: set footer logo path or hide it if empty
\newcommand{\sethmfooterlogo}[1]{%
  \providecommand{\hmfooterlogopath}{}% define if not yet defined
  \if\relax\detokenize{#1}\relax
    % empty argument: hide logo
    \hmfooterlogohiddentrue
  \else
    % non-empty: set path and show logo
    \renewcommand{\hmfooterlogopath}{#1}%
    \hmfooterlogohiddenfalse
  \fi
}
% Helper: get effective footer logo path (fallback to main logo if not set)
\newcommand{\hmeffectivefooterlogo}{%
  \ifcsname hmfooterlogopath\endcsname
    \hmfooterlogopath
  \else
    \hmlogopath
  \fi
}
% Footer logo size on content slides (increase to enlarge the logo)
% Example: \sethmfooterlogoheight{3ex} or {8pt}
\newlength{\hmfooterlogoheight}\setlength{\hmfooterlogoheight}{2.6ex}
\newcommand{\sethmfooterlogoheight}[1]{\setlength{\hmfooterlogoheight}{#1}}

% Vertical fine-tuning for the footer logo only
% Positive values move the logo up, negative values move it down
% Example: \sethmfooterlogovshift{0.5ex}
\newlength{\hmfooterlogovshift}\setlength{\hmfooterlogovshift}{1ex}
\newcommand{\sethmfooterlogovshift}[1]{\setlength{\hmfooterlogovshift}{#1}}

% Footer padding (adjust to move content slightly inward)
\newlength{\hmfooterpadleft}\setlength{\hmfooterpadleft}{6mm}
\newlength{\hmfooterpadcenter}\setlength{\hmfooterpadcenter}{4mm}
\newlength{\hmfooterpadright}\setlength{\hmfooterpadright}{6mm}
% Spacing between logo and footer text ("regular" horizontal gap)
% Example: \sethmfooterlogotextsep{0.75em}
\newlength{\hmfooterlogotextsep}\setlength{\hmfooterlogotextsep}{1em}
\newcommand{\sethmfooterlogotextsep}[1]{\setlength{\hmfooterlogotextsep}{#1}}
% Width of the footer text block (so it can wrap to two lines)
% Example: \sethmfootertextwidth{0.60\paperwidth}
\newlength{\hmfootertextwidth}\setlength{\hmfootertextwidth}{0.60\paperwidth}
\newcommand{\sethmfootertextwidth}[1]{\setlength{\hmfootertextwidth}{#1}}

% Vertical fine-tuning for footer text (title + custom text) only
% Positive values move the text up, negative values move it down
% Example: \sethmfootertextvshift{0.5ex}
\newlength{\hmfootertextvshift}\setlength{\hmfootertextvshift}{1.5ex}
\newcommand{\sethmfootertextvshift}[1]{\setlength{\hmfootertextvshift}{#1}}

% Bottom padding: move footer content slightly up from the bottom edge
\makeatletter
\@ifundefined{hmfooterpadbottom}{%
  \newlength{\hmfooterpadbottom}%
  \setlength{\hmfooterpadbottom}{4mm}%
}{}
\makeatother
% Compute adjusted height/depth so total remains constant while adding bottom padding
\newlength{\hmfooterht}\setlength{\hmfooterht}{3ex}
\newlength{\hmfooterdp}\setlength{\hmfooterdp}{1ex}
\addtolength{\hmfooterdp}{\hmfooterpadbottom}
\addtolength{\hmfooterht}{-\hmfooterpadbottom}

% ----------------- Frametitle top spacing ----------------------------------
% Define a length that controls vertical spacing above the frametitle. Default
% equals the footer bottom padding (so top/bottom feel balanced).
\newlength{\hmframetitletop}
\makeatletter
\ifcsname hmfooterpadbottom\endcsname
  \setlength{\hmframetitletop}{\hmfooterpadbottom}
\else
  \setlength{\hmframetitletop}{4mm}
\fi
\makeatother
\newcommand{\sethmframetitletop}[1]{\setlength{\hmframetitletop}{#1}}
% Define horizontal (left) spacing for frametitle and default it to the top
% spacing so both are identical by default. Users can override independently.
\newlength{\hmframetitleleft}
\setlength{\hmframetitleleft}{\hmframetitletop}
\newcommand{\sethmframetitleleft}[1]{\setlength{\hmframetitleleft}{#1}}
% Define a safe frametitle template that applies the configured top and left
% spacing inside a beamercolorbox (avoids horizontal-mode errors).
\setbeamertemplate{frametitle}{%
  \vspace*{\hmframetitletop}% top gap
  \begin{beamercolorbox}[sep=1ex,wd=\paperwidth]{frametitle}%
    \hspace*{\hmframetitleleft}% left gap
    {\usebeamerfont{frametitle}\insertframetitle}%
  \end{beamercolorbox}%
}

% Footline: HM logo left + footer text, frame numbers right
\setbeamertemplate{footline}{%
  \leavevmode%
  \hbox{%
    % Left area (combined): logo + regular gap + footer text
    \begin{beamercolorbox}[wd=.82\paperwidth,ht=\hmfooterht,dp=\hmfooterdp,left]{footline}%
      % extra left padding to move logo slightly inwards
      \hspace{\hmfooterpadleft}%
  % footer logo (height configurable via \hmfooterlogoheight), vertically centered
  % Extra fine-tuning via \hmfooterlogovshift (positive = up, negative = down)
  \ifhmfooterlogohidden
    % no logo, no separation
  \else
    \raisebox{\hmfooterlogovshift}{\raisebox{-.5\height}{\includegraphics[height=\hmfooterlogoheight]{\hmeffectivefooterlogo}}}%
    % regular separation between logo and text
    \hspace{\hmfooterlogotextsep}%
  \fi
  % footer text block to the right of the logo (two lines), vertically centered with the logo
  % Line 1: presentation title (short title if set), Line 2: custom footer text
  % Styling: same font weight for both lines (no bold on title)
  % Extra fine-tuning via \hmfootertextvshift (positive = up, negative = down)
  \raisebox{\hmfootertextvshift}{\raisebox{-.5\height}{\parbox[c]{\hmfootertextwidth}{\usebeamerfont{footline}\footnotesize \insertshorttitle\\[-0.2ex] \hmfootertext}}}%
    \end{beamercolorbox}%
  \begin{beamercolorbox}[wd=.18\paperwidth,ht=\hmfooterht,dp=\hmfooterdp,right]{footline}%
      \usebeamerfont{footline}\footnotesize \insertframenumber{}%
      % extra right padding to move page number slightly inwards
      \hspace{\hmfooterpadright}
    \end{beamercolorbox}%
  }%
  \vskip0pt%
}

% Title page with big HM logo bottom-left
\setbeamertemplate{title page}{%
  \begingroup
  \vbox{}
  \vfill
  \begin{flushleft}
    {\usebeamercolor[fg]{title}\fontsize{22pt}{26pt}\selectfont\bfseries\inserttitle\par}
    \vspace{0.3em}
    {\usebeamercolor[fg]{title}\fontsize{16pt}{20pt}\selectfont\insertsubtitle\par}
    \vspace{1.5em}
    {\normalsize \insertauthor\par}
    {\normalsize \insertinstitute\par}
    \vspace{1em}
    {\normalsize \insertdate\par}
  \end{flushleft}
  \vfill
  \hbox to \textwidth{%
    \includegraphics[height=2.2cm]{\hmlogopath}\hfill
  }
  \endgroup
}

% Itemize bullets in HM red
\setbeamercolor{item}{fg=HMRed}
\setbeamertemplate{itemize items}[circle]
\setbeamerfont{frametitle}{series=\bfseries,size=\Large}

% Table of contents (TOC) style: numbers | bullets | none
% Default: numbers (1, 1.1, ...). Change via \sethmtocstyle{bullets} or {none}.
% The style affects how entries in \tableofcontents are rendered.
\makeatletter
% current style token (numbers|bullets|none)
\newcommand{\hmtocstyle}{numbers}
% public setter: call and it will reapply the corresponding template immediately
\newcommand{\sethmtocstyle}[1]{\renewcommand{\hmtocstyle}{#1}\hmapplytocstyle}
% internal: apply current style, fallback to numbers for unknown value
\newcommand{\hmapplytocstyle}{%
  \ifcsname hmtocstyle@\hmtocstyle\endcsname
    \csname hmtocstyle@\hmtocstyle\endcsname
  \else
    \hmtocstyle@numbers
  \fi
}
% numbered style (e.g., 1, 1.1)
\newcommand{\hmtocstyle@numbers}{%
  \setbeamertemplate{section in toc}{%
    {\usebeamercolor[fg]{item}\usebeamerfont{item}\inserttocsectionnumber.}\hspace{0.5em}\inserttocsection}%
  \setbeamertemplate{subsection in toc}{%
    \hspace{1.7em}{\usebeamercolor[fg]{item}\usebeamerfont{item}\inserttocsubsectionnumber.}\hspace{0.5em}\inserttocsubsection}%
}
% bullet style (classic dots)
\newcommand{\hmtocstyle@bullets}{%
  \setbeamertemplate{section in toc}{%
    {\usebeamercolor[fg]{item}\usebeamerfont{item}\raisebox{0.15em}{\usebeamertemplate{itemize item}}}\hspace{0.6em}\inserttocsection}%
  \setbeamertemplate{subsection in toc}{%
    \hspace{1.7em}{\usebeamercolor[fg]{item}\usebeamerfont{item}\raisebox{0.15em}{\usebeamertemplate{itemize item}}}\hspace{0.6em}\inserttocsubsection}%
}
% none style (no markers)
\newcommand{\hmtocstyle@none}{%
  \setbeamertemplate{section in toc}{\inserttocsection}%
  \setbeamertemplate{subsection in toc}{\hspace{1.7em}\inserttocsubsection}%
}
% apply default on theme load
\hmapplytocstyle
\makeatother